version: '3.4'

services:
  productdb:
    image: mongo
    container_name: productdb
    command: mongod --port 27017
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - mongo_data:/data/db1
    networks:
      main:
    
  stockdb:
    image: mongo
    container_name: stockdb
    command: mongod --port 27018
    ports:
      - "27018:27018"
    restart: always
    volumes:
      - mongo_data:/data/db2
    networks:
      main:


  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      main:

  product:
    image: ${DOCKER_REGISTRY-}product
    build:
      context: .
      dockerfile: Product/Dockerfile
    container_name: product
    ports:
      - "8000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://productdb:27017"
    depends_on:
      - productdb
    networks:
      main:

  stock:
    image: ${DOCKER_REGISTRY-}stock
    build:
      context: .
      dockerfile: Stock/Dockerfile
    container_name: stock
    ports:
      - "8001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://stockdb:27018"
    depends_on:
      - stockdb
    networks:
      main:

volumes:
  mongo_data:

networks:
  main:
    driver: bridge
  
